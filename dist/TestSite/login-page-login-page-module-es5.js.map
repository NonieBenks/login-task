{"version":3,"sources":["webpack:///src/app/login-page/container/login-page.component.ts","webpack:///src/app/login-page/container/login-page.component.html","webpack:///src/app/login-page/login-page-routing.module.ts","webpack:///src/app/login-page/login-page.module.ts"],"names":["LoginPageComponent","accountService","router","translate","hide","param","value","languages","title","code","login","required","minLength","password","setDefaultLang","hasError","selector","templateUrl","styleUrls","routes","path","component","children","loadChildren","then","m","HomePageModule","canActivate","LoginPageRoutingModule","forChild","imports","exports","LoginPageModule","declarations"],"mappings":"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","file":"login-page-login-page-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, Validators, FormsModule } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AccountService } from \"src/app/shared/services/account.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\n\n@Component({\n\tselector: \"app-login-page\",\n\ttemplateUrl: \"./login-page.component.html\",\n\tstyleUrls: [\"./login-page.component.scss\"],\n})\nexport class LoginPageComponent implements OnInit {\n\tpublic hide = true;\n\tpublic param = { value: \"world\" };\n\n\tpublic languages = [\n\t\t{ title: \"Українська\", code: \"ua\" },\n\t\t{ title: \"English\", code: \"en\" },\n\t\t{ title: \"Française\", code: \"fr\" },\n\t\t{ title: \"Русский\", code: \"ru\" },\n\t];\n\n\tconstructor(\n\t\tpublic accountService: AccountService,\n\t\tprivate router: Router,\n\t\ttranslate: TranslateService\n\t) {\n\t\ttranslate.setDefaultLang(\"fr\");\n\t\t//translate.use(\"fr\");\n\t}\n\n\tngOnInit(): void {}\n\n\tpublic login = new FormControl(\"\", [\n\t\tValidators.required,\n\t\tValidators.minLength(3),\n\t]);\n\n\tpublic password = new FormControl(\"\", [\n\t\tValidators.required,\n\t\tValidators.minLength(4),\n\t]);\n\n\tpublic getErrorLogin() {\n\t\tif (this.login.hasError(\"required\")) {\n\t\t\treturn \"You must enter a login\";\n\t\t}\n\t}\n\n\tpublic getErrorPassword() {\n\t\tif (this.password.hasError(\"required\")) {\n\t\t\treturn \"You must enter a password\";\n\t\t}\n\t}\n}\n","<div class=\"login\">\n\t<h1 class=\"login-title\">{{ \"TEST.ENTER_SECRET\" | translate }}</h1>\n\t<mat-card class=\"login-form\">\n\t\t<mat-form-field appearance=\"outline\" class=\"form-field\">\n\t\t\t<mat-label>{{ \"TEST.ENTER_LOGIN\" | translate }}</mat-label>\n\t\t\t<input\n\t\t\t\tclass=\"input-field\"\n\t\t\t\tmatInput\n\t\t\t\tplaceholder=\"pat@example.com\"\n\t\t\t\t[formControl]=\"login\"\n\t\t\t/>\n\t\t\t<mat-error *ngIf=\"login.invalid\">{{ getErrorLogin() }}</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field appearance=\"outline\" class=\"form-field\">\n\t\t\t<mat-label>{{ \"TEST.ENTER_PASSWORD\" | translate }}</mat-label>\n\t\t\t<input\n\t\t\t\tclass=\"input-field\"\n\t\t\t\tmatInput\n\t\t\t\t[type]=\"hide ? 'password' : 'text'\"\n\t\t\t\t[formControl]=\"password\"\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tmat-icon-button\n\t\t\t\tmatSuffix\n\t\t\t\t(click)=\"hide = !hide\"\n\t\t\t\t[attr.aria-label]=\"'Hide password'\"\n\t\t\t\t[attr.aria-pressed]=\"hide\"\n\t\t\t>\n\t\t\t\t<mat-icon>{{\n\t\t\t\t\thide ? \"visibility_off\" : \"visibility\"\n\t\t\t\t}}</mat-icon>\n\t\t\t</button>\n\t\t\t<mat-error *ngIf=\"password.invalid\">{{\n\t\t\t\tgetErrorPassword()\n\t\t\t}}</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-label class=\"wrong-value\">{{\n\t\t\taccountService.wrongValueError\n\t\t}}</mat-label>\n\t\t<button\n\t\t\tmat-flat-button\n\t\t\tclass=\"login-btn\"\n\t\t\t(click)=\"accountService.login(login.value, password.value)\"\n\t\t\trouterLink=\"/home\"\n\t\t>\n\t\t\t{{ \"TEST.LOGIN\" | translate }}\n\t\t</button>\n\t</mat-card>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginPageComponent } from \"./container/login-page.component\";\nimport { HomePageGuard } from \"../home-page/guards/home-page.guard\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: LoginPageComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: \"home\",\n\t\t\t\tloadChildren: () =>\n\t\t\t\t\timport(\"../home-page/home-page.module\").then(\n\t\t\t\t\t\t(m) => m.HomePageModule\n\t\t\t\t\t),\n\t\t\t\tcanActivate: [HomePageGuard],\n\t\t\t},\n\t\t],\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CustomMaterialModule } from \"../shared/modules/custom-material.module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { LoginPageRoutingModule } from \"./login-page-routing.module\";\nimport { LoginPageComponent } from \"./container/login-page.component\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n@NgModule({\n\tdeclarations: [LoginPageComponent],\n\timports: [\n\t\tCommonModule,\n\t\tCustomMaterialModule,\n\t\tReactiveFormsModule,\n\t\tTranslateModule,\n\t\tLoginPageRoutingModule,\n\t],\n})\nexport class LoginPageModule {}\n"]}