{"version":3,"sources":["webpack:///src/app/base/base-routing.module.ts","webpack:///src/app/base/base.module.ts","webpack:///src/app/base/container/base.component.ts","webpack:///src/app/base/container/base.component.html","webpack:///src/app/home-page/guards/home-page.guard.ts","webpack:///src/app/shared/services/account.service.ts","webpack:///src/app/toolbar/container/toolbar.component.ts","webpack:///src/app/toolbar/container/toolbar.component.html"],"names":["routes","path","component","children","loadChildren","then","m","LoginPageModule","HomePageModule","canActivate","redirectTo","BaseRoutingModule","forChild","declarations","imports","exports","BaseModule","BaseComponent","selector","templateUrl","styleUrls","HomePageGuard","router","accountService","route","state","loggedIn","providedIn","AccountService","wrongValueError","username","password","ToolbarComponent","translate","languages","title","code","addLangs","setDefaultLang","use","navigate","language"],"mappings":"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","file":"base-base-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomePageGuard } from \"../home-page/guards/home-page.guard\";\nimport { BaseComponent } from \"./container/base.component\";\n\nconst routes: Routes = [\n\t{\n\t\tpath: \"\",\n\t\tcomponent: BaseComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: \"login\",\n\t\t\t\tloadChildren: () =>\n\t\t\t\t\timport(\"../login-page/login-page.module\").then(\n\t\t\t\t\t\t(m) => m.LoginPageModule\n\t\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"home\",\n\t\t\t\tloadChildren: () =>\n\t\t\t\t\timport(\"../home-page/home-page.module\").then(\n\t\t\t\t\t\t(m) => m.HomePageModule\n\t\t\t\t\t),\n\t\t\t\tcanActivate: [HomePageGuard],\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: \"\",\n\t\t\t\tredirectTo: \"login\",\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tpath: \"**\",\n\t\t\t\tredirectTo: \"login\",\n\t\t\t},\n\t\t],\n\t},\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class BaseRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ToolbarComponent } from \"../toolbar/container/toolbar.component\";\nimport { BaseComponent } from \"./container/base.component\";\nimport { BaseRoutingModule } from \"./base-routing.module\";\nimport { CustomMaterialModule } from \"../shared/modules/custom-material.module\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n\tdeclarations: [ToolbarComponent, BaseComponent],\n\timports: [\n\t\tCommonModule,\n\t\tBaseRoutingModule,\n\t\tReactiveFormsModule,\n\t\tCustomMaterialModule,\n\t\tTranslateModule,\n\t],\n})\nexport class BaseModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-toolbar></app-toolbar><router-outlet></router-outlet>\n","import {\n\tCanActivate,\n\tActivatedRouteSnapshot,\n\tRouterStateSnapshot,\n\tRouter,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AccountService } from \"../../shared/services/account.service\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class HomePageGuard implements CanActivate {\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate accountService: AccountService\n\t) {}\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | boolean {\n\t\tif (this.accountService.loggedIn) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n\tprovidedIn: \"root\",\n})\nexport class AccountService {\n\tpublic loggedIn: Boolean = false;\n\tpublic wrongValueError: string = \"\";\n\n\tconstructor() {}\n\n\tpublic login(username: string, password: string) {\n\t\tif (username === \"test\" && password === \"test\") {\n\t\t\tthis.loggedIn = true;\n\t\t\tthis.wrongValueError = \"\";\n\t\t\treturn true;\n\t\t}\n\t\tthis.loggedIn = false;\n\t\tthis.wrongValueError = \"Wrong login or password\";\n\t}\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TranslateService } from \"@ngx-translate/core\";\n\nimport { AccountService } from \"src/app/shared/services/account.service\";\n\n@Component({\n\tselector: \"app-toolbar\",\n\ttemplateUrl: \"./toolbar.component.html\",\n\tstyleUrls: [\"./toolbar.component.scss\"],\n})\nexport class ToolbarComponent implements OnInit {\n\tpublic languages = [\n\t\t{ title: \"Українська\", code: \"ua\" },\n\t\t{ title: \"English\", code: \"en\" },\n\t\t{ title: \"Française\", code: \"fr\" },\n\t\t{ title: \"Русский\", code: \"ru\" },\n\t];\n\n\tconstructor(\n\t\tpublic router: Router,\n\t\tpublic accountService: AccountService,\n\t\tpublic translate: TranslateService\n\t) {\n\t\ttranslate.addLangs([\"en\", \"fr\", \"ru\", \"ua\"]);\n\t\ttranslate.setDefaultLang(\"fr\");\n\t\ttranslate.use(\"en\");\n\t}\n\n\tngOnInit(): void {}\n\n\tpublic logout() {\n\t\tthis.accountService.loggedIn = false;\n\t\tthis.router.navigate([\"/login\"]);\n\t}\n\tpublic useLanguage(language: string): void {\n\t\tthis.translate.use(language);\n\t}\n}\n","<mat-toolbar>\n\t<button\n\t\t*ngIf=\"accountService.loggedIn\"\n\t\tmat-icon-button\n\t\tclass=\"home-icon\"\n\t\taria-label=\"Example icon-button with menu icon\"\n\t\trouterLink=\"/home\"\n\t>\n\t\t<span>{{ \"TEST.PORTFOLIO\" | translate }}</span>\n\t\t<span class=\"example-spacer\"></span>\n\t</button>\n\t<button\n\t\t*ngIf=\"accountService.loggedIn\"\n\t\tmat-icon-button\n\t\taria-label=\"Example icon-button with menu icon\"\n\t\trouterLink=\"/login\"\n\t>\n\t\t<mat-icon>home</mat-icon>\n\t</button>\n\n\t<button\n\t\t*ngIf=\"accountService.loggedIn\"\n\t\tmat-icon-button\n\t\t(click)=\"logout()\"\n\t\taria-label=\"Example icon-button with heart icon\"\n\t>\n\t\t<mat-icon>logout</mat-icon>\n\t</button>\n\t<button [matMenuTriggerFor]=\"menu\" mat-icon-button>\n\t\t<mat-icon>language</mat-icon>\n\t</button>\n\t<mat-menu #menu=\"matMenu\" class=\"lang-menu\">\n\t\t<button\n\t\t\t*ngFor=\"let languageItem of languages\"\n\t\t\tmat-menu-item\n\t\t\tclass=\"lang-btn\"\n\t\t\t(click)=\"useLanguage(languageItem.code)\"\n\t\t>\n\t\t\t{{ languageItem.title | translate }}\n\t\t</button>\n\t</mat-menu>\n</mat-toolbar>\n"]}